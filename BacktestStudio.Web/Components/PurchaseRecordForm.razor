@using BacktestStudio.Service.Dtos
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer

<div class="card">
    <div class="card-header">
        <h5 class="card-title mb-0">@(IsEditMode ? "編輯買入記錄" : "新增買入記錄")</h5>
    </div>
    <div class="card-body">
        <EditForm Model="record" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary class="alert alert-danger" />
            
            <div class="mb-3">
                <label class="form-label">買入日期</label>
                <InputDate @bind-Value="record.Date" class="form-control" />
                <ValidationMessage For="@(() => record.Date)" class="text-danger" />
            </div>
            
            <div class="mb-3">
                <label class="form-label">價格</label>
                <InputNumber @bind-Value="record.Price" class="form-control" step="0.01" />
                <ValidationMessage For="@(() => record.Price)" class="text-danger" />
            </div>
            
            <div class="mb-3">
                <label class="form-label">數量</label>
                <InputNumber @bind-Value="record.Quantity" class="form-control" />
                <ValidationMessage For="@(() => record.Quantity)" class="text-danger" />
            </div>
            
            <div class="d-flex gap-2">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-check-circle me-1"></i>
                    @(IsEditMode ? "儲存" : "新增")
                </button>
                <button type="button" class="btn btn-secondary" @onclick="OnCancel">
                    <i class="bi bi-x-circle me-1"></i>
                    取消
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public PurchaseRecordDto? Record { get; set; }
    [Parameter]
    public EventCallback<PurchaseRecordDto> OnSaved { get; set; }
    [Parameter]
    public EventCallback OnCancelled { get; set; }

    private PurchaseRecordDto record = new();
    private bool IsEditMode => Record != null;

    protected override void OnParametersSet()
    {
        if (Record != null)
            record = new PurchaseRecordDto
            {
                Id = Record.Id,
                Date = Record.Date,
                Price = Record.Price,
                Quantity = Record.Quantity
            };
        else
            record = new PurchaseRecordDto();
    }

    private async Task HandleValidSubmit()
    {
        await OnSaved.InvokeAsync(record);
    }

    private async Task OnCancel()
    {
        await OnCancelled.InvokeAsync();
    }
}
